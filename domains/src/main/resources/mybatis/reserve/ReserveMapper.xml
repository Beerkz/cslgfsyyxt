<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cslg.reserve.repository.ReserveRepository">

    <!-- List<ReserveLabVo> pageReserveLab(PageReserveCondition pageReserveCondition); -->
    <select id="pageReserveLab" resultType="com.cslg.reserve.vo.ReserveLabVo">
        select
        tl.lab_name,
        tl.lab_url,
        tl.lab_name,
        tl.longitude,
        tl.latitude,
        tst.begin_time,
        tst.end_time,
        concat(date_format(tst.begin_time,'%H:%i'),'-',date_format(tst.end_time,'%H:%i')) as spliceTime
        from t_lab tl
        inner join t_lab_time_membership tltm on tltm.lab_id = tl.id
        left join t_splice_time tst on tst.id = tltm.time_id
        where tl.status =0 and tl.is_deleted =0
        order by tl.id,spliceTime
        <if test="start !=null and limit >0">
            limit #{start},#{limit}
        </if>
    </select>

    <!-- void insertReserve(StartReserveParam startReserveParam); -->
    <insert id="insertReserve">
        insert into t_lab_reserve(lab_id,
                                  user_id,
                                  reserve_date,
                                  create_time,
                                  update_time,
                                  status,
                                  splice_time_id,
                                  reason,
                                  pro_key)
        values (#{labId},
                #{userId},
                #{reserveDate},
                current_timestamp(),
                current_timestamp(),
                0,
                #{spliceTimeId},
                #{reason},
                #{proKey})
    </insert>

    <!-- void updateReserve(StartReserveParam startReserveParam); -->
    <update id="updateReserve">
        update t_lab_reserve
        set status = 1
        where id = #{id}
    </update>
    <!-- Integer countReserveByParam(StartReserveParam startReserveParam); -->
    <select id="countReserveByParam" resultType="java.lang.Integer">
        select count(*)
        from t_lab_reserve
        where splice_time_id = #{spliceTimeId}
          and reserve_date = #{reserveDate}
          and is_deleted = 0
    </select>

    <!-- ReserveLabVo getReserveInfo(PageReserveCondition pageReserveCondition); -->
    <select id="getReserveInfo" resultType="com.cslg.reserve.vo.ReserveLabVo">
        select *
        from t_lab_reserve
    </select>

    <!-- ReserveLabVo getReserveInfoByKey(@Param("key") String key); -->
    <select id="getReserveInfoByKey" resultType="com.cslg.reserve.vo.ReserveLabVo">
        select tlr.*, su.*, su.name as reserveName
        from t_lab_reserve tlr
                 left join sys_user su on su.id = tlr.user_id
                 left join t_lab tl on tl.id = tlr.lab_id
        where tlr.pro_key = #{key}
    </select>

    <!-- Integer countReserveInfo(@Param("params")PageReserveCondition pageReserveCondition,@Param("items") List<String> keys); -->
    <select id="countReserveInfo" resultType="java.lang.Long">
        select count(*)
        from t_lab_reserve tlr
        left join t_lab tl on tlr.lab_id = tl.id
        left join sys_user su on su.id = tlr.user_id
        left join t_splice_time tst on tst.id = tlr.splice_time_id
        <where>
            tlr.pro_key in
            <foreach collection="items" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
            <if test="params.labName!=null and params.labName!=''">
                and tl.lab_name like concat(#{params})
            </if>
        </where>
    </select>

    <!-- List<ReserveLabVo> pageReserveInfo(List<String> keys); -->
    <select id="pageReserveInfo" resultType="com.cslg.reserve.vo.ReserveLabVo">
        select tl.lab_name,
        tlr.id,
        tlr.reserve_date as reserveDate,
        concat(date_format(tst.begin_time,'%H:%i'),'-',date_format(tst.end_time,'%H:%i')) as spliceTime,
        su.name as reserveName,
        su.phone as reserveTel,
        tlr.pro_key as proKey
        from t_lab_reserve tlr
        left join t_lab tl on tlr.lab_id = tl.id
        left join sys_user su on su.id = tlr.user_id
        left join t_splice_time tst on tst.id = tlr.splice_time_id
        <where>
            tlr.pro_key in
            <foreach collection="items" open="(" separator="," close=")" item="item">
                #{item}
            </foreach>
            <if test="params.labName!=null and params.labName!=''">
                and tl.lab_name like concat(#{params})
            </if>
        </where>
        <if test="params.start!=null and params.limit>0">
            limit #{params.start},#{params.limit}
        </if>
    </select>

    <!-- ReserveLabVo getReserveInfoById(@Param("id") Long id); -->
    <select id="getReserveInfoById" resultType="com.cslg.reserve.vo.ReserveLabVo">
        select tlr.*, su.*, su.name as reserveName
        from t_lab_reserve tlr
                 left join sys_user su on su.id = tlr.user_id
                 left join t_lab tl on tl.id = tlr.lab_id
        where tlr.id = tlr.id
    </select>

    <!-- void updateReserveStatus(@Param("id")Long id ,@Param("status")Long status); -->
    <update id="updateReserveStatus">
        update t_lab_reserve
        set status =#{status}
        where id = #{id}
    </update>

    <!-- Long countProKeyByUserId(@Param("id") Long id); -->
    <select id="countMyReserveInfo" resultType="java.lang.Long">
        select count(*)
        from t_lab_reserve tlr
        left join t_lab tl on tl.id = tlr.lab_id and tl.is_deleted = 0
        <where>
            tlr.user_id = #{userId} and tlr.is_deleted=0
            <if test="labName!=null and labName!=''">
                and tl.lab_name like concat(#{labName},'%')
            </if>
            <if test="reserveDate!=null and reserveDate!=''">
                and tlr.reserve_date>=#{reserveDate}
            </if>
            <if test="spliceTimeId!=null and spliceTimeId!=''">
                and tlr.splice_time_id=#{spliceTimeId}
            </if>
            <if test="status!=null and status!=''">
                and tlr.status = #{status}
            </if>
        </where>
    </select>

    <!-- List<String> getProKeyByUserId(PageReserveCondition pageReserveCondition); -->
    <select id="pageMyReserveInfo" resultType="com.cslg.reserve.vo.ReserveLabVo">
        select
        tlr.id,
        tlr.reserve_date ,
        tl.lab_name,
        su.phone as reserveTel,
        su.name as reserveName,
        concat(date_format(tst.begin_time,'%H:%i'),'-',date_format(tst.end_time,'%H:%i')) as spliceTime,
        (case tlr.status
        when 0 then '审核中'
        when 1 then '审核不通过'
        else '审核通过' end) as statusName
        from t_lab_reserve tlr
        left join t_lab tl on tl.id = tlr.lab_id and tl.is_deleted = 0
        left join sys_user su on su.id = tlr.user_id
        left join t_splice_time tst on tst.id = tlr.splice_time_id
        <where>
            tlr.user_id = #{userId} and tlr.is_deleted=0
            <if test="labName!=null and labName!=''">
                and tl.lab_name like concat(#{labName},'%')
            </if>
            <if test="reserveDate!=null and reserveDate!=''">
                and tlr.reserve_date>=#{reserveDate}
            </if>
            <if test="spliceTimeId!=null and spliceTimeId!=''">
                and tlr.splice_time_id=#{spliceTimeId}
            </if>
            <if test="status!=null and status!=''">
                and tlr.status = #{status}
            </if>
        </where>
    </select>


    <!-- ReserveInfoVo getMyReserveInfoById(@Param("id") Long id); -->
    <select id="getMyReserveInfoById" resultType="com.cslg.reserve.vo.ReserveInfoVo">
        select concat(date_format(tst.begin_time, '%H:%i'), '-', date_format(tst.end_time, '%H:%i')) as spliceTime,
               tl.lab_url,
               tl.lab_name,
               tlr.reason,
               tlr.id,
               tlr.reserve_date,
               (case tlr.status
                    when 0 then '审核中'
                    when 1 then '审核不通过'
                    else '审核通过' end)                                                                 as statusName,
               tlr.pro_key
        from t_lab_reserve tlr
                 left join t_lab tl on tl.id = tlr.lab_id
                 left join t_splice_time tst on tst.id = tlr.splice_time_id
        where tlr.is_deleted = 0
          and tlr.id = #{id}
    </select>
</mapper>
